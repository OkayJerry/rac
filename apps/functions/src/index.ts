// apps/functions/src/index.ts
import { initializeAdminApp } from '@rac/data-access-firebase-admin';
import { logger } from 'firebase-functions';
import { onRequest } from 'firebase-functions/v2/https';
import * as functions from 'firebase-functions/v1';

// 1. Import from the correct genkit and plugin packages
import { genkit } from 'genkit';
import { vertexAI, textEmbedding004 } from '@genkit-ai/vertexai'; // Use Vertex AI plugin
import { z } from 'zod';
import { FieldValue, getFirestore } from 'firebase-admin/firestore'; // Import FieldValue

// Initialize Firebase Admin SDK for existing functionality.
initializeAdminApp();

// 2. Initialize Genkit with the Vertex AI plugin
const ai = genkit({
  plugins: [vertexAI({ location: 'us-central1' })],
});

// 3. Define the core embedding logic as a Genkit flow
export const knowledgeBaseEmbedder = ai.defineFlow(
  {
    name: 'knowledgeBaseEmbedder',
    inputSchema: z.object({ docId: z.string(), content: z.string() }),
    outputSchema: z.void(),
  },
  async ({ docId, content }) => {
    logger.info(`Generating embedding for docId: ${docId}`);

    // 4. Correctly call embed and access the result
    const embedding = (
      await ai.embed({
        embedder: textEmbedding004, // Use the imported model object
        content: content,
      })
    )[0].embedding;

    // 5. Use FieldValue.vector() to store the embedding
    await getFirestore()
      .collection('knowledge_bases')
      .doc(docId)
      .update({ embedding: FieldValue.vector(embedding) });
  }
);

// 6. Create a standard v1 Firestore trigger that invokes the Genkit flow
export const onKBCreate = functions
  .region('us-central1')
  .firestore.document('knowledge_bases/{docId}')
  .onCreate(async (snap) => {
    const data = snap.data();
    if (!data || typeof data.content !== 'string') {
      logger.log('Document data or content field is missing or not a string.');
      return;
    }

    await knowledgeBaseEmbedder.run({
      docId: snap.id,
      content: data.content,
    });
  });

// Your existing v2 HTTP function
export const helloWorld = onRequest({}, (request, response) => {
  logger.info('Hello logs!', { structuredData: true });
  response.send('Hello from Firebase - Generated by @nx-toolkits/firebase!');
});
