name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  actions: read

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      # fetch-depth: 0 is required for Nx to compare with the 'main' branch for affected commands.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup Node.js and cache npm modules for faster installs
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 3. Install dependencies from the lock file
      - name: Install dependencies
        run: npm ci

      # 4. Run lint, test, and build commands
      # On pushes to 'main', run against all projects to ensure full integrity.
      # On pull requests, run only against affected projects for speed.
      - name: Run CI tasks (for main branch)
        if: github.event_name == 'push'
        run: npm run ci

      - name: Run CI tasks on Affected Projects (for PRs)
        if: github.event_name == 'pull_request'
        run: npm run ci:affected

      # 5. Cache Firestore emulator JAR to speed up subsequent CI runs
      - name: Cache Firestore Emulator JAR
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulator-v1-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulator-v1-

      # 6. Install a pinned version of firebase-tools globally for stability
      - name: Install Firebase CLI
        run: npm install -g firebase-tools@14.9.0

      # 7. Run End-to-end tests against the Firebase Emulator Suite
      # This step runs after the build is complete. The emulators:exec command starts
      # the emulators, which use the built functions, and the nx e2e command serves the
      # web app for Playwright to test.
      - name: E2E Tests
        run: npm run test:e2e
